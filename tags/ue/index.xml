<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>UE on GeeTeng</title>
    <link>https://geeteng.github.io/tags/ue/</link>
    <description>Recent content in UE on GeeTeng</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 15 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://geeteng.github.io/tags/ue/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>FPS游戏项目制作笔记</title>
      <link>https://geeteng.github.io/posts/ue/fps%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Tue, 15 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://geeteng.github.io/posts/ue/fps%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0/</guid>
      <description>枪械后坐力 考虑到不同枪有不同后坐力，所以在ShooterGun.h中创建了结构体用来存储枪械的后坐力。&#xA;USTRUCT(BlueprintType) struct FRecoilConfig { GENERATED_BODY() UPROPERTY(EditDefaultsOnly, BlueprintReadWrite, Category = &amp;#34;Recoil&amp;#34;) float VerticalBase = -0.1f; // 基础垂直后坐力 UPROPERTY(EditDefaultsOnly, BlueprintReadWrite, Category = &amp;#34;Recoil&amp;#34;) float VerticalRandomRange = 0.02f; // 垂直随机扰动范围 UPROPERTY(EditDefaultsOnly, BlueprintReadWrite, Category = &amp;#34;Recoil&amp;#34;) float HorizontalRandomRange = 0.05f; // 水平随机扰动范围 }; 在该函数中改变控制器的Pitch和Yaw偏移量&#xA;void AShooterGun::MakeRecoilCPP() { AShooterCharacter* Character = Cast&amp;lt;AShooterCharacter&amp;gt;(UGameplayStatics::GetPlayerCharacter(this, 0)); if (Character) { // 根据不同枪设置不同后坐力 float FinalPitch = RecoilConfig.VerticalBase + FMath::FRandRange(-RecoilConfig.VerticalRandomRange, RecoilConfig.VerticalRandomRange); float FinalYaw = FMath::FRandRange(-RecoilConfig.HorizontalRandomRange, RecoilConfig.HorizontalRandomRange); Character-&amp;gt;AddControllerPitchInput(FinalPitch); Character-&amp;gt;AddControllerYawInput(FinalYaw); } } 添加镜头抖动</description>
    </item>
  </channel>
</rss>
