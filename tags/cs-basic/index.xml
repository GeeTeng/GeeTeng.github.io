<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CS Basic on GeeTeng</title>
    <link>https://geeteng.github.io/tags/cs-basic/</link>
    <description>Recent content in CS Basic on GeeTeng</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 13 Jan 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://geeteng.github.io/tags/cs-basic/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>计算机网络</title>
      <link>https://geeteng.github.io/posts/cs_basic/computernetwork/</link>
      <pubDate>Mon, 13 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://geeteng.github.io/posts/cs_basic/computernetwork/</guid>
      <description>概述 计算机网络分类 计算机网络体系结构 七层OSI模型 应用层、表示层、会话层、传输层、网络层、数据链路层、物理层&#xA;五层模型 应用层、传输层、网络层、数据链路层、物理层&#xA;TCP/IP四层模型 应用层（HTTP\SMTP\DNS\RTP）、运输层(TCP\UDP)、网络层(IP)、网络接口层&#xA;协议三要素：&#xA;语法：定义交换信息的格式 语义：定义收发双方要完成的操作 同步：定义收发双方的时序关系 三种交换方式 电路交换 电话交换机接通电话线的方式称为电路交换，使用电路交换传送计算机数据时，其线路的传输效率往往很低。&#xA;三个步骤：&#xA;建立连接 通话 释放连接 分组交换 分组交换采用的是存储转发技术&#xA;在发送报文之前，先把较长的报文划分成一个个更小的等长的数据段；然后在数据段的前面加上一些由必要的控制信息组成的首部后，就构成了一个分组&#xA;发送方：构造分组、发送分组&#xA;路由器：缓存分组、转发分组&#xA;接收方：接受分组、还原报文&#xA;报文交换 用于早期的电报通信网，现在较少使用，通常被分组交换方式所取代。&#xA;对比 物理层 物理层的基本概念 解决再各种传输媒体上传输比特0和1的问题，给数据链路层提供透明传输比特流的服务，如：双绞线、同轴电缆、光纤等。&#xA;物理层协议的主要任务&#xA;机械特性：指明接口所用接线器的形状和尺寸、引脚数目和排列、固定和锁定装置。 电气特性：指明在接口电缆的各条线上出现的电压的范围。 功能特性：指明某条线上出现的某一电平的电压表示何种意义。 过程特性：指明对于不同功能的各种可能事件的出现顺序。 传输媒体 导引型传输媒体：同轴电缆、双绞线、光纤（多模光纤、单模光纤）、电力线&#xA;非导引性传输媒体：无线电波、微波、红外线、可见光&#xA;传输方式 串行传输 / 并行传输 计算机远距离传输采用串行传输，计算机内部采用并行传输&#xA;同步传输 / 异步传输 内同步（曼彻斯特编码）&#xA;异步是指字节之间异步&#xA;单项通信（单工）/ 双向交替通信（半双工）/双向同时通信（全双工） 单项通信：一种方向，无线电广播就是这样的方式。&#xA;双向交替通信：双方可以相互传输数据，比如对讲机，但是不能同时传输。&#xA;双向同时通信：双方可以同时发送、接收信息，比如手机。&#xA;数据链路层 数据链路层概述 链路就是从一个结点到相邻结点的一段物理线路，而中间没有任何其他的交换结点。&#xA;数据链路是指把实现通信协议的硬件和软件加到链路上，就构成了链路。&#xA;数据链路层以帧为单位传输和处理数据&#xA;封装成帧 应用层传递应用层协议数据单元给运输层，运输层加上运输层协议首部传递给网络层，网络层将数据添加网络层协议首部传递给数据链路层，数据链路层添加帧头和帧尾。&#xA;帧头和帧尾的作用之一就是帧定界。如下图，红色部分就是P2P帧定界标志。但是以太网MAC帧并没有帧定界标志。&#xA;那以太网的MAC帧怎么被提取一个个帧呢？&#xA;实际上以太网V2的MAC帧交付给物理层后会添加前导码，前导码中前7个字节为前同步码，作用是使接收方的时针同步，之后的1字节为帧开始定界符。&#xA;透明传输&#xA;透明传输是指不管所传数据是什么样的比特组合，都应当能够在链路上传送。当所传数据中的比特组合恰巧与某一个控制信息完全一样时，就必须采取适当的措施，使接收方不会将这样的数据误认为是某种控制信息。这样才能保证数据链路层的传输是透明的。&#xA;如何判断发送的数据中是帧定位符还是帧的数据？&#xA;下图是P2P帧的格式，在数据部分每遇到5个1可以添加1个0，和帧的首尾区分开，在读取的时候再删除这个0。&#xA;为了提高帧的传输效率，应当使帧的数据部分尽可能大一些。</description>
    </item>
    <item>
      <title>操作系统</title>
      <link>https://geeteng.github.io/posts/cs_basic/os/</link>
      <pubDate>Fri, 10 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://geeteng.github.io/posts/cs_basic/os/</guid>
      <description>1. 第一章 操作系统概述 1.1 操作系统概念、特征 操作系统是指控制和管理整个计算机系统的硬件和软件资源，并合理的组织调度计算机的工作和资源的分配，以提供给用户和其他软件方便的接口和环境集合。&#xA;并发 并发是指两个或多个事件在同一时间间隔内发生。操作系统的并发是通过分时得以实现的。操作系统的并发性是指计算机系统中同时存在多个运行着的程序，因此它具有处理和调度多个程序同时执行的能力。&#xA;共享 资源共享就是共享，系统中的资源可供内存中多个并发执行的进程同时使用，可分为以下两种。&#xA;互斥共享方式&#xA;比如打印机，不能同时打印两份内容，不然会造成内容混淆。&#xA;同时访问方式&#xA;交替的对该资源进行访问 “分时共享”。&#xA;虚拟 操作系统中利用了多种虚拟技术，分别用来实现虚拟处理机、虚拟内存和虚拟外部设备。&#xA;在虚拟处理器技术中，让多道程序并发执行来分时使用一台处理器，虽然只有一台处理器，但是能同时为多个用户服务。把一台物理上的CPU虚拟为多态逻辑上的CPU称为虚拟处理器。&#xA;虚拟存储器，从逻辑上来扩充存储器的容量。&#xA;虚拟设备技术，将一台物理IO设备虚拟为多台逻辑上的IO设备，允许多个用户同时访问的共享设备。&#xA;异步 在多道程序环境下，允许多个程序并发执行，但由于资源有限，进程的执行不是一贯到底，而是走走停停，以不可预知的速度向前推进，这就是进程的异步性。&#xA;操作系统的目标和功能 为了给多道程序提供良好的运行环境，操作系统应该具有：处理器管理、存储器管理、文件管理和设备管理，还必须向用户提供接口，同时操作系统可用来扩充机器，以提供更方便的服务、更高的资源利用率。&#xA;处理器管理&#xA;对处理器的管理可归结为对进程的管理，主要功能有：进程控制、进程同步、进程通信、死锁处理、处理器调度等。&#xA;存储器管理&#xA;方便用户使用以及提高内存的利用率，存储器管理应具备：内存分配、地址映射、内存保护、共享和内存扩充等。&#xA;文件管理&#xA;包括文件的存储空间管理、目录管理和文件读写管理、文件保护。&#xA;设备管理&#xA;完成用户的IO请求，主要包括混充管理、设备分配、设备处理和虚拟设备等。&#xA;为了方便用户使用操作系统，操作系统还提供了用户接口，分为以下两类。&#xA;命令接口&#xA;使用命令接口进行作业控制的主要方式有两种：联机命令接口和脱机命令接口。&#xA;程序接口&#xA;程序接口由一组系统调用命令组成，用户可以直接使用命令向系统提出各种请求。&#xA;操作系统的结构 简单结构、模块化结构、分层式结构、微内核结构。&#xA;1.3 操作系统的运行环境 操作系统在具体实现上划分了用户态、核心态。&#xA;操作系统内核包括以下4方面：&#xA;时钟管理&#xA;操作系统需要通过时钟管理，向用户提供标准的系统时间。通过时钟中断的管理，可以实现进程切换。&#xA;中断机制&#xA;引入中断机制是为了提高多道程序运行环境中CPU的利用率。&#xA;原语&#xA;原语处于操作系统最底层，是最接近硬件的部分；具有原子性（一气呵成，不可中断）；运行时间短、调用频繁。&#xA;系统控制的数据结构及处理&#xA;常见的基本操作有以下3种，进程管理、存储器管理、设备管理。&#xA;中断和异常 引入核心态和用户态之后，就需要考虑如何在这两种状态下切换。**中断是让操作系统内核夺回CPU使用权的唯一途径。**内核工作在核心态，应用程序工作在用户态，系统不允许用户使用核心态的功能，但是它们又必须使用。&#xA;中断（外中断）&#xA;中断信号来源于CPU外部，与当前执行的指令无关。比如说时钟中断和I/O中断请求，当输入输出任务完成时，向CPU发送中断信号，或时钟部件每隔50ms发送一个中断信号。&#xA;异常（内中断）&#xA;源于CPU执行指令内部，比如程序的非法操作。&#xA;一些由用户态转为核心态的例子：1）用户程序要求系统服务 2）发生一次中断 3）用户程序产生错误 4）用户程序企图执行特权指令&#xA;第二章 进程管理 进程与线程 进程控制块（PCB）描述进程的基本情况和运行状态，PCB是进程存在的唯一标志。&#xA;进程由PCB、程序段、数据段组成。&#xA;进程的特征 动态性(最基本的特性)、并发性、独立性、异步性、结构性。&#xA;独立性：能够独立运行、独立获得资源、独立接受调度的基本单位。</description>
    </item>
  </channel>
</rss>
